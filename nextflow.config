/**
    RUMP: A Reproducible Untargeted Metabolomics Data Processing Pipeline
    Description : This file in the configuration of RUMP, including resource allocation and parameters information
    Copyright   : (C) LemasLab
    Author      : Xinsong Du
    License     : GNU GPL-v3.0 License
          
    This script is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    This script is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with this script.  If not, see <http://www.gnu.org/licenses/>.
    
    For any bugs or problems found, please contact us at
    - xinsongdu@ufl.edu, manfiol@ufl.edu, djlemas@ufl.edu; 
    - https://github.com/lemaslab/RUMP
*/

manifest {
    homePage = 'https://github.com/lemaslab/RUMP'
    description = 'RUMP: A Reproducible Untargeted Metabolomics Data Processing Pipeline'
    mainScript = 'main.nf'
    version = '0.0.0'
}

trace 
{
    enabled = true
    fields = 'task_id, name, status, exit, module, submit, start, complete, duration, realtime, %cpu, rss, vmem, peak_rss, peak_vmem'
}

report
{
    enabled = true
    file = 'nextflow_report.html'
}

timeline 
{
    enabled = true
}

workflow.onComplete = {
    // any workflow property can be used here
    println "Pipeline complete, writing success report to file ./logs/success_report.txt"
    println "Command line: $workflow.commandLine"
    File file = new File("./logs/success_report.txt")
    file.write("$workflow.success")
}


workflow.onError = {
    println "Oops .. something when wrong, exit status: $workflow.exitStatus\nWriting error message to file ./logs/error.txt"
    File file = new File("./logs/error.txt")
    file.write("$workflow.errorReport")
}

params 
{
    // Whether do blank subtraction or not
    bs = "1"

    // Whether do unknown search or not
    unknown_search = "1"

    // Use singularity?
    container = "Docker"

    // Change the following folder location (positive samples) to the location on your machine
    input_dir_pos = "data/POS/"  

    // Change the following folder location (negative samples) to the location on your machine
    input_dir_neg = "data/NEG/"

    // Output help information?
    version = null
    help = null

    // Location of MZmine
    mzmine_dir = "MZmine-2.53-Linux/"

    // Change the following file location (customized library for matching metabolites) to the location on your machine
    pos_library = "positive_library.csv"
    neg_library = "negative_library.csv"

    pos_config = "pos_config.xml"
    neg_config = "neg_config.xml"

    pos_mzmine_peak_output = "pos_data.csv" // Positive data processing result generated by MzMine, this is an intermediate result, it is not used by "run_all.nf"
    neg_mzmine_peak_output = "neg_data.csv" // Negative data processing result generated by MzMine, this is an intermediate result, it is not used by "run_all.nf"

    pos_data_nobg = "pos_data_before_blank_subtraction.csv"
    neg_data_nobg = "neg_data_before_blank_subtraction.csv"

    python_input_check = "./rump/input_check.py"
    batchfile_generator_pos = "./rump/batchfile_generator_pos_253.py"
    batchfile_generator_neg = "./rump/batchfile_generator_neg_253.py"
    python_vd = "./rump/venn.py"
    python_addstats = "./rump/add_stats.py"
    python_pca = "./rump/pca.py"
    python_hclustering = "./rump/h_clustering.py"
    python_barplot = "./rump/bar_plot.py"
    data_info = "./rump/data_info.py"
    peak_number_comparison_path = "./rump/peak_number_comparison.py"
    python_bs = "./rump/blank_subtraction.py"
    r_unknown_search = "./rump/unknown_search.R"

    mz_col_pos_nobg = "row.m.z"
    mz_col_neg_nobg = "row.m.z"
    mz_col_pos_withbg = "row.m.z"
    mz_col_neg_withbg = "row.m.z"

    mqc_dir = "./results/mqc/"
    experiments_info = "./rump/software_descriptions_mqc.txt"
    mqc_config = "./rump/multiqc_config.yaml"

    // outputs for mqc_data_info
    pos_data_info_mqc = "a_pos_data_info_mqc.yaml"
    neg_data_info_mqc = "b_neg_data_info_mqc.yaml"

    // location of data and design files

    POS_data_path = "pos_data_extracted.csv"
    POS_design_path = "./data/pos_design.csv"
    NEG_data_path = "neg_data_extracted.csv"
    NEG_design_path = "./data/neg_design.csv"
    POS_Rdata_path = "milk_data_pos_ph.Rdata"
    POS_Rdata_csv_path = "milk_data_pos_ph.csv"
    POS_Rdesign_path = "milk_design_pos_ph.Rdata"
    NEG_Rdata_path = "milk_data_neg_ph.Rdata"
    NEG_Rdata_csv_path = "milk_data_neg_ph.csv"
    NEG_Rdesign_path = "milk_design_neg_ph.Rdata"

    // outputs for blank_subtraction
    pos_data_withbg = "pos_data_after_blank_subtraction.csv"
    neg_data_withbg = "neg_data_after_blank_subtraction.csv"

    // outputs for mqc_peak_number_comparison
    peak_number_comparison_mqc = "c_peak_number_comparison_mqc.txt"

    // outputs for raw_stats_merge_nobg
    pos_nobg_ready = "pos_nobg_ready.csv"
    neg_nobg_ready = "neg_nobg_ready.csv"

    // outputs for pca_nobg
    pca_pos_nobg = "pca_pos_nobg.png"
    pca_neg_nobg = "pca_neg_nobg.png"

    // outputs for pca_withbg
    pca_pos_withbg = "pca_pos_withbg.png"
    pca_neg_withbg = "pca_neg_withbg.png"

    // outputs for venn_nobg
    vd_pos_nobg = "pos_vd_nobg.png"
    pos_vd_group1_nobg = "pos_vd_group1_nobg.csv"
    pos_vd_group2_nobg = "pos_vd_group2_nobg.csv"
    pos_vd_both_nobg = "pos_vd_both_nobg.csv"
    vd_neg_nobg = "neg_venn_nobg.png"
    neg_vd_group1_nobg = "neg_vd_group1_nobg.csv"
    neg_vd_group2_nobg = "neg_vd_group2_nobg.csv"
    neg_vd_both_nobg = "neg_vd_both_nobg.csv"

    // outputs for venn_withbg
    vd_pos_withbg = "pos_vd_withbg.png"
    pos_vd_group1_withbg = "pos_vd_group1_withbg.csv"
    pos_vd_group2_withbg = "pos_vd_group2_withbg.csv"
    pos_vd_both_withbg = "pos_vd_both_withbg.csv"
    vd_neg_withbg = "neg_venn_withbg.png"
    neg_vd_group1_withbg = "neg_vd_group1_withbg.csv"
    neg_vd_group2_withbg = "neg_vd_group2_withbg.csv"
    neg_vd_both_withbg = "neg_vd_both_withbg.csv"

    // outputs for h_clustering_nobg
    hclustering_pos_nobg = "hclustering_pos_nobg.png"
    hclustering_pos_nobg_om = "hclustering_onlymatched_pos_nobg.png"
    hclustering_neg_nobg = "hclustering_neg_nobg.png"
    hclustering_neg_nobg_om = "hclustering_onlymatched_neg_nobg.png"

    // outputs for h_clustering_withbg
    hclustering_pos_withbg = "hclustering_pos_withbg.png"
    hclustering_pos_withbg_om = "hclustering_onlymatched_pos_withbg.png"
    hclustering_neg_withbg = "hclustering_neg_withbg.png"
    hclustering_neg_withbg_om = "hclustering_onlymatched_neg_withbg.png"

    // outputs for barplot_nobg
    barplot_pos_nobg = "pos_barplot_group1_nobg.png"
    barplot_pos_nobg_om = "pos_onlymatched_barplot_group1_nobg.png"
    barplot_neg_nobg = "neg_barplot_group1_nobg.png"
    barplot_neg_nobg_om = "neg_onlymatched_barplot_group1_nobg.png"

    // outputs for barplot_withbg
    barplot_pos_withbg = "pos_barplot_group1_withbg.png"
    barplot_pos_withbg_om = "pos_onlymatched_barplot_group1_withbg.png"
    barplot_neg_withbg = "neg_barplot_group1_withbg.png"
    barplot_neg_withbg_om = "neg_onlymatched_barplot_group1_withbg.png"

    // outputs for unknown_search_nobg
    unknown_search_pos_nobg = "unknown_search_pos_nobg.csv"
    unknown_search_neg_nobg = "unknown_search_neg_nobg.csv"

    // outputs for unknown_search_withbg
    unknown_search_pos_withbg = "unknown_search_pos_withbg.csv"
    unknown_search_neg_withbg = "unknown_search_neg_withbg.csv"

    // regarding mummichog
    python_mummichog_input_prepare = "./rump/mummichog_input_prepare.py"
    data_pos_nobg_group1_mummichog = "data_pos_nobg_group1_mummichog.txt"
    data_pos_nobg_group1_mummichog_out = "data_pos_group1_before_blank_subtraction"
    data_pos_nobg_group2_mummichog = "data_pos_nobg_group2_mummichog.txt"
    data_pos_nobg_group2_mummichog_out = "data_pos_group2_before_blank_subtraction"
    data_pos_nobg_both_mummichog = "data_pos_nobg_both_mummichog.txt"
    data_pos_nobg_both_mummichog_out = "data_pos_both_before_blank_subtraction"
    data_pos_withbg_group1_mummichog = "data_pos_withbg_group1_mummichog.txt"
    data_pos_withbg_group1_mummichog_out = "data_pos_group1_after_blank_subtraction"
    data_pos_withbg_group2_mummichog = "data_pos_withbg_group2_mummichog.txt"
    data_pos_withbg_group2_mummichog_out = "data_pos_group2_after_blank_subtraction"
    data_pos_withbg_both_mummichog = "data_pos_withbg_both_mummichog.txt"
    data_pos_withbg_both_mummichog_out = "data_pos_both_after_blank_subtraction"
    cutoff = 0.05

}

docker.enabled = true
process.container = 'cgpu/rump'

profiles {
  standard {includeConfig 'conf/google.config' }
}

process 
{
    withName: input_check
    {
        cpus = 1
        memory = '4 GB'  
    }
    withName: mqc_data_info
    {
        cpus = 1
        memory = '4 GB'  
    }
    withName: batchfile_generation_mzmine
    {
        cpus = 1
        memory = '4 GB'
    }
    withName: pos_peakDetection_mzmine
    {
        cpus = 2
        memory = '7 GB'  
    }
    withName: neg_peakDetection_mzmine
    {
        cpus = 2
        memory = '7 GB'  
    }
    withName: blank_subtraction
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: pca_nobg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: pca_withbg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: venn_diagram_nobg
    {
        time =  '15m'
        cpus = 1
        memory = '4 GB'   
    }
    withName: venn_diagram_withbg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: bar_plot_nobg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: bar_plot_withbg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: unknown_search_nobg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: unknown_search_withbg
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: mqc_figs
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: report_generator
    {
        cpus = 1
        memory = '4 GB'   
    }
    withName: mummichog_report_nobg
    {
        cpus = 1
        memory = '4GB'
    }
    withName: mummichog_report_withbg
    {
        cpus = 1
        memory = '4GB'
    }
}
